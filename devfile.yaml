schemaVersion: 2.1.0
metadata:
  name: sams-dev
projects:
  -  name: sams-cola
     git:
       remotes: 
         origin: 'git@github.com:la-county-isd/sams-cola.git'
       checkoutFrom:
         revision: main
components:
  - name: tools
    container:
      #image: registry.redhat.io/devspaces/udi-rhel8:3.9
      image: quay.io/kayvon77/ruby-dev:1.0
      memoryLimit: '2Gi'
      memoryRequest: '1Gi'
      cpuLimit: '1'
      cpuRequest: '0.5'
      mountSources: true
      endpoints:
        - exposure: public
          name: 'sams-endpoint'
          targetPort: 3000
      env:
        - name: RAILS_ENV
          value: development
        - name: PROJECTROOT
          value: ${PROJECTS_ROOT}
        - name: DATABASE_URL
          value: mysql2://root:example@db:3306
        - name: MEMCACHED_HOST
          value: memcached
        - name: ELASTICSEARCH_URL
          value: http://es:9200
        - name: REDIS_URL
          value: redis://redis:6379
        - name: MAILDEV_HOST
          value: maildev
        - name: MINIO_ACCESS_KEY
          value: minio_development
        - name: MINIO_SECRET_KEY
          value: minio_development
        - name: MINIO_BUCKET
          value: secure-bucket
  # - name: db
  #   container:
  #     args:
  #       - --default-authentication-plugin=mysql_native_password 
  #     image: mysql:8.0
  #     memoryLimit: '2Gi'
  #     memoryRequest: '1Gi'
  #     cpuLimit: '1'
  #     cpuRequest: '0.5'
  #     mountSources: false
  #     dedicatedPod: true
  #     env:
  #       - name: MYSQL_ROOT_PASSWORD
  #         value: example
  #       - name: MYSQL_DATABASE
  #         value: sams_development
  #       - name: MYSQL_USER
  #         value: sams
  #       - name: MYSQL_PASSWORD
  #         value: samspassword
  #     endpoints:
  #       - name: db
  #         targetPort: 3306
  #         protocol: tcp
  #         exposure: internal
  - name: db
    openshift:
      endpoints:
        - exposure: internal
          name: db
          targetPort: 3306
          protocol: tcp
      inlined: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          annotations:
            app.openshift.io/route-disabled: "false"
            deployment.kubernetes.io/revision: "2"
          labels:
            app: db
            app.kubernetes.io/component: db
            app.kubernetes.io/instance: db
            app.kubernetes.io/name: db
            app.kubernetes.io/part-of: che.eclipse.org
          name: db
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: db
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                openshift.io/generated-by: OpenShiftWebConsole
              creationTimestamp: null
              labels:
                app: db
                deployment: db
            spec:
              containers:
              - env:
                - name: MYSQL_PASSWORD
                  value: samspassword
                - name: MYSQL_DATABASE
                  value: sams_development
                - name: MYSQL_ROOT_PASSWORD
                  value: example
                - name: MYSQL_USER
                  value: sams
                image: mysql:8.0
                imagePullPolicy: IfNotPresent
                name: db
                ports:
                - containerPort: 3306
                  protocol: TCP
                - containerPort: 33060
                  protocol: TCP
                resources: {}
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /var/lib/mysql
                  name: db-1
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              terminationGracePeriodSeconds: 30
              volumes:
              - emptyDir: {}
                name: db-1
commands:
  - id: build
    exec:
      commandLine: ${PROJECT_SOURCE}/bin/bundle install --path vendor/bundle && npm i
      component: tools
      group:
        kind: build
        isDefault: true
  - id: db
    apply:
      component: db
      group:
        kind: run
        isDefault: true
events:
  preStart: [ db ]

  #    volumeMounts:
  #      - name: nuget
  #        path: /home/user/.nuget
 # - name: nuget
 #   volume:
 #     size: 1G

    
       
 
